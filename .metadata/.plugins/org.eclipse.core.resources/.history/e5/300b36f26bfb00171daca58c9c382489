

	
	package com.dqube.config;

	import java.sql.Connection;
	import java.sql.DriverManager;
import java.util.Properties;

import javax.sql.DataSource;

import org.hibernate.SessionFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.ComponentScan;
import org.springframework.context.annotation.Configuration;
import org.springframework.orm.hibernate5.HibernateTransactionManager;
import org.springframework.orm.hibernate5.LocalSessionFactoryBuilder;

import com.dqube.entity.EntityClass;

	@Configuration
	@ComponentScan("com.dqube")
	public class ConfigurationClass {
		
		public static Connection getH2DataSource() {
			Connection con = null;
			String databasename = "cc";
			String userName = "root";
			String password = "root";
			try {
				Class.forName("com.mysql.jdbc.Driver");
				con = DriverManager.getConnection("jdbc:mysql://localhost:3388/"
						+ databasename, userName, password);
			} catch (Exception e) {
				e.printStackTrace();
			}
			return con;
		}
	

	
	
	@Autowired
	@Bean(name="sessionFactory")
	public SessionFactory getSessionFactory()
	{
		Properties hibernateProperties=new Properties();
		hibernateProperties.setProperty("hibernate.hbm2ddl.auto","update");
		hibernateProperties.put("hibernate.dialect","org.hibernate.dialect.MySQLDialect");
		
		LocalSessionFactoryBuilder localSessionFacBuilder=new LocalSessionFactoryBuilder((DataSource) getH2DataSource());
		localSessionFacBuilder.addProperties(hibernateProperties);
//		localSessionFacBuilder.addAnnotatedClass(Category.class);
//		localSessionFacBuilder.addAnnotatedClass(Supplier.class);
//		localSessionFacBuilder.addAnnotatedClass(Product.class);
//		localSessionFacBuilder.addAnnotatedClass(User.class);
		localSessionFacBuilder.addAnnotatedClass(EntityClass.class);
		SessionFactory sessionFactory=localSessionFacBuilder.buildSessionFactory();
		System.out.println("Session Factory Object Created");
		return sessionFactory;
	}
	
	@Autowired
	@Bean(name="transactionManager")
	
	public HibernateTransactionManager getHibernateTransactionManager(SessionFactory sessionFactory)
	{
		HibernateTransactionManager hibernateTranMgr=new HibernateTransactionManager(sessionFactory);
		return hibernateTranMgr;
	}
	
}